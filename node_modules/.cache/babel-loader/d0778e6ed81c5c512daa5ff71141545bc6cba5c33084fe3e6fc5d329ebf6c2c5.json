{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/Repos/wrapped-clone/src/components/Wrapped.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport TopArtists from './TopArtists';\nimport TopSongs from './TopSongs';\nimport ListeningStats from './ListeningStats';\nimport GenreBreakdown from './GenreBreakdown';\nimport styles from './Wrapped.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Wrapped({\n  data\n}) {\n  _s();\n  const [currentSection, setCurrentSection] = useState(0);\n  const sections = [Header, TopArtists, TopSongs, ListeningStats, GenreBreakdown];\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (currentSection < sections.length - 1) {\n        setCurrentSection(currentSection + 1);\n      }\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [currentSection]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapped,\n    children: sections.slice(0, currentSection + 1).map((Section, index) => /*#__PURE__*/_jsxDEV(Section, {\n      ...data\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Wrapped, \"RYROtEx+RXfBTkRvcfqxRPeXCxM=\");\n_c = Wrapped;\nexport default Wrapped;\nvar _c;\n$RefreshReg$(_c, \"Wrapped\");","map":{"version":3,"names":["React","useState","useEffect","Header","TopArtists","TopSongs","ListeningStats","GenreBreakdown","styles","jsxDEV","_jsxDEV","Wrapped","data","_s","currentSection","setCurrentSection","sections","timer","setTimeout","length","clearTimeout","className","wrapped","children","slice","map","Section","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tom/Documents/Repos/wrapped-clone/src/components/Wrapped.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport TopArtists from './TopArtists';\nimport TopSongs from './TopSongs';\nimport ListeningStats from './ListeningStats';\nimport GenreBreakdown from './GenreBreakdown';\nimport styles from './Wrapped.module.css';\n\nfunction Wrapped({ data }) {\n  const [currentSection, setCurrentSection] = useState(0);\n  const sections = [Header, TopArtists, TopSongs, ListeningStats, GenreBreakdown];\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (currentSection < sections.length - 1) {\n        setCurrentSection(currentSection + 1);\n      }\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [currentSection]);\n\n  return (\n    <div className={styles.wrapped}>\n      {sections.slice(0, currentSection + 1).map((Section, index) => (\n        <Section key={index} {...data} />\n      ))}\n    </div>\n  );\n}\n\nexport default Wrapped;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMe,QAAQ,GAAG,CAACb,MAAM,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,cAAc,CAAC;EAE/EL,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7B,IAAIJ,cAAc,GAAGE,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;QACxCJ,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMM,YAAY,CAACH,KAAK,CAAC;EAClC,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EAEpB,oBACEJ,OAAA;IAAKW,SAAS,EAAEb,MAAM,CAACc,OAAQ;IAAAC,QAAA,EAC5BP,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAEV,cAAc,GAAG,CAAC,CAAC,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACxDjB,OAAA,CAACgB,OAAO;MAAA,GAAiBd;IAAI,GAAfe,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CArBQF,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAuBhB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}